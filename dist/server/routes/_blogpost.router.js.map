{"version":3,"sources":["../../../app/routes/_blogpost.router.js"],"names":["fs","require","app","router","route","get","req","res","blogpost","find","exec","err","console","log","send","json","findById","params","blogId","blog","put","upvotes","save","downvotes","post"],"mappings":"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","file":"_blogpost.router.js","sourcesContent":["\n// \n\nimport blogpost from '../models/blogPosts.model';\nlet fs = require('fs');\n\nexport default (app, router) => {\n\n  // ## Recipe API Routes\n\n  // Define routes for the `recipe` API\n\n  router.route('/blogs').get((req, res) => {\n    // Use mongoose to get all blog items in the database\n    blogpost.find({}).exec((err, blogpost) => {\n       if(err)\n     {\n       console.log('blogs result',err);\n        res.send(err);\n    }else{\n       console.log('blogs result',blogpost);\n        res.json(blogpost);\n      } \n  });\n  });\n\n  router.route('/blogs/:blogId').get((req,res) => {\n    // Use mongoose to get particular blog items in the database\n      blogpost.findById(req.params.blogId, function(err, blog) {\n              if (err)\n                 res.send(err);\n              else\n                 res.json(blog);\n      })\n  })\n\n  router.route('/blogs/:blog/upvote').put((req,res) => {\n\n    blogpost.findById(req.params.blog, function(err, blog) {\n      if (err)\n          res.send(err);\n\n      blog.upvotes += 1;  // update the bears info\n      // save the bear\n      blog.save(function(err) {\n          if (err)\n              res.send(err);\n       \n       \n          blogpost.findById(req.params.blog, function(err, blog) {\n              if (err)\n                 res.send(err);\n              else\n                 res.json(blog);\n            })\n         \n      });\n    });\n  })\n\n     router.route('/blogs/:blog/downvote') .put((req,res) => {\n      blogpost.findById(req.params.blog, function(err, blog) {\n        if (err)\n            res.send(err);\n\n        blog.downvotes -= 1;  // update the bears info\n        // save the bear\n        blog.save(function(err) {\n            if (err)\n                res.send(err);\n\n            // Use mongoose to get all blog items in the database\n            blogpost.findById(req.params.blog, function(err, blog) {\n              if (err)\n                 res.send(err);\n              else\n                 res.json(blog);\n            })\n        });\n\n      });\n\n  })\n \n\n  //post data submit\n  router.route('/api/blog/new').post((req,res) => {\n      blogpost.find({}).exec(req, function(err, blog) {\n        if (err)\n            res.send(err);\n\n        // save the bear\n        blog.save(function(err) {\n            if (err)\n                res.send(err);\n            \n             blogpost.find({}).exec((err, blogpost) => {\n                if(err)\n              {\n                  console.log('blogs result',err);\n                  res.send(err);\n              }else{\n                console.log('blogs result',blogpost);\n                  res.json(blogpost);\n                } \n            });\n\n        });\n\n      });\n\n  })\n\n\n};\n"]}