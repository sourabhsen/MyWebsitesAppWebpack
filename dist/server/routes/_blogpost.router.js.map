{"version":3,"sources":["../../../app/routes/_blogpost.router.js"],"names":["fs","require","app","router","route","get","req","res","find","exec","err","blogpost","console","log","send","json","findById","params","blogId","blog","put","upvotes","save","downvotes","post"],"mappings":"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","file":"_blogpost.router.js","sourcesContent":["\r\n// \r\n\r\nimport blogpost from '../models/blogPosts.model';\r\nlet fs = require('fs');\r\n\r\nexport default (app, router) => {\r\n\r\n  // ## Recipe API Routes\r\n\r\n  // Define routes for the `recipe` API\r\n\r\n  router.route('/blogs').get((req, res) => {\r\n    // Use mongoose to get all blog items in the database\r\n    blogpost.find({}).exec((err, blogpost) => {\r\n       if(err)\r\n     {\r\n       console.log('blogs result',err);\r\n        res.send(err);\r\n    }else{\r\n       console.log('blogs result',blogpost);\r\n        res.json(blogpost);\r\n      } \r\n  });\r\n  });\r\n\r\n  router.route('/blogs/:blogId').get((req,res) => {\r\n    // Use mongoose to get particular blog items in the database\r\n      blogpost.findById(req.params.blogId, function(err, blog) {\r\n              if (err)\r\n                 res.send(err);\r\n              else\r\n                 res.json(blog);\r\n      })\r\n  })\r\n\r\n  router.route('/blogs/:blog/upvote').put((req,res) => {\r\n\r\n    blogpost.findById(req.params.blog, function(err, blog) {\r\n      if (err)\r\n          res.send(err);\r\n\r\n      blog.upvotes += 1;  // update the bears info\r\n      // save the bear\r\n      blog.save(function(err) {\r\n          if (err)\r\n              res.send(err);\r\n       \r\n       \r\n          blogpost.findById(req.params.blog, function(err, blog) {\r\n              if (err)\r\n                 res.send(err);\r\n              else\r\n                 res.json(blog);\r\n            })\r\n         \r\n      });\r\n    });\r\n  })\r\n\r\n     router.route('/blogs/:blog/downvote') .put((req,res) => {\r\n      blogpost.findById(req.params.blog, function(err, blog) {\r\n        if (err)\r\n            res.send(err);\r\n\r\n        blog.downvotes -= 1;  // update the bears info\r\n        // save the bear\r\n        blog.save(function(err) {\r\n            if (err)\r\n                res.send(err);\r\n\r\n            // Use mongoose to get all blog items in the database\r\n            blogpost.findById(req.params.blog, function(err, blog) {\r\n              if (err)\r\n                 res.send(err);\r\n              else\r\n                 res.json(blog);\r\n            })\r\n        });\r\n\r\n      });\r\n\r\n  })\r\n \r\n\r\n  //post data submit\r\n  router.route('/api/blog/new').post((req,res) => {\r\n      blogpost.find({}).exec(req, function(err, blog) {\r\n        if (err)\r\n            res.send(err);\r\n\r\n        // save the bear\r\n        blog.save(function(err) {\r\n            if (err)\r\n                res.send(err);\r\n            \r\n             blogpost.find({}).exec((err, blogpost) => {\r\n                if(err)\r\n              {\r\n                  console.log('blogs result',err);\r\n                  res.send(err);\r\n              }else{\r\n                console.log('blogs result',blogpost);\r\n                  res.json(blogpost);\r\n                } \r\n            });\r\n\r\n        });\r\n\r\n      });\r\n\r\n  })\r\n\r\n\r\n};\r\n"]}