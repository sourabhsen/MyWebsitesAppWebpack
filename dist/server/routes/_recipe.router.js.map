{"version":3,"sources":["../../../app/routes/_recipe.router.js"],"names":["app","router","route","post","req","res","Recipe","create","title","body","tags","rating","description","ingredients","directions","err","recipe","send","console","log","json","get","find","findOne","params","recipe_id","put","creator","save","delete","remove","_id","recipes"],"mappings":"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","file":"_recipe.router.js","sourcesContent":["\n// */app/routes/_recipe.router.js*\n\n// # Recipe API object\n\n// HTTP Verb  Route                   Description\n\n// GET        /api/recipe             Get all of the recipes\n// GET        /api/recipe/:recipe_id  Get a single recipe by recipe id\n// POST       /api/recipe             Create a single recipe\n// DELETE     /api/recipe/:recipe_id  Delete a single recipe\n// PUT        /api/recipe/:recipe_id  Update a recipe with new info\n\n// Load the `recipe` model\nimport Recipe from '../models/recipe.model';\n\nexport default (app, router) => {\n\n  // ## Recipe API Routes\n\n  // Define routes for the `recipe` API\n\n  router.route('/recipe')\n\n    // ### Create a `recipe`\n\n    // Accessed at POST http://localhost:8080/api/recipe\n\n    // Create a `recipe`\n    .post((req, res) => {\n\n      Recipe.create({\n\n        title : req.body.title,\n\n        tags : req.body.tags,\n\n        rating : req.body.rating,\n\n        description : req.body.description,\n\n        ingredients : req.body.ingredients,\n\n        directions : req.body.directions,\n\n      }, (err, recipe) => {\n\n        if (err)\n          res.send(err);\n\n        // DEBUG\n        console.log(`Recipe created: ${recipe}`);\n\n        // return the new `recipe` to our front-end\n        res.json(recipe);\n      });\n    })\n\n    // ### Get all of the `recipes`\n\n    // Accessed at GET http://localhost:8080/api/recipe\n    .get((req, res) => {\n\n      // Use mongoose to get all recipes in the database\n      Recipe.find((err, recipe) => {\n\n        if(err)\n          res.send(err);\n\n        else\n          res.json(recipe);\n      });\n    });\n\n  router.route('/recipe/:recipe_id')\n\n    // ### Get a `recipe` by ID\n\n    // Accessed at GET http://localhost:8080/api/recipe/:recipe_id\n    .get((req, res) => {\n\n      // Use mongoose to fetch a single `recipe` by id in the database\n      Recipe.findOne(req.params.recipe_id, (err, recipe) => {\n\n        if(err)\n          res.send(err);\n\n        else\n          res.json(recipe);\n      });\n    })\n\n    // ### Update a `recipe` by ID\n\n    // Accessed at PUT http://localhost:8080/api/recipe/:recipe_id\n    .put((req, res) => {\n\n      // use our `recipe` model to find the `recipe` we want\n      Recipe.findOne({\n\n        '_id' : req.params.recipe_id\n\n      }, (err, recipe) => {\n\n        if (err)\n          res.send(err);\n\n        // Only update a field if a new value has been passed in\n        if (req.body.title)\n          recipe.title = req.body.title;\n\n        if (req.body.tags)\n          recipe.tags = req.body.tags;\n\n        if (req.body.rating)\n          recipe.rating = req.body.rating;\n\n        if (req.body.creator)\n          recipe.creator = req.body.creator;\n\n        if (req.body.description)\n          recipe.description = req.body.description;\n\n        if (req.body.ingredients)\n          recipe.ingredients = req.body.ingredients;\n\n        if (req.body.directions)\n          recipe.directions = req.body.directions;\n\n        // save the `recipe`\n        return recipe.save((err) => {\n\n          if (err)\n            res.send(err);\n\n          return res.send(recipe);\n\n        });\n      });\n    })\n\n    // ### Delete a `recipe` by ID\n\n    // Accessed at DELETE http://localhost:8080/api/recipe/:recipe_id\n    .delete((req, res) => {\n\n      // DEBUG\n      console.log(`Attempting to delete recipe with id: ${req.params.recipe_id}`);\n\n      Recipe.remove({\n\n        _id : req.params.recipe_id\n      }, (err, recipe) => {\n\n        if(err)\n          res.send(err);\n\n        else\n          console.log('Recipe successfully deleted!');\n\n        Recipe.find((err, recipes) => {\n          if(err)\n            res.send(err);\n\n          res.json(recipes);\n        });\n      });\n    });\n};\n"]}