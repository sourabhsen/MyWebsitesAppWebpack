{"version":3,"sources":["../../../app/routes/_recipe.router.js"],"names":["app","router","route","post","req","res","create","title","body","tags","rating","description","ingredients","directions","err","recipe","send","console","log","json","get","find","findOne","params","recipe_id","put","creator","save","delete","remove","_id","recipes"],"mappings":"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","file":"_recipe.router.js","sourcesContent":["\r\n// */app/routes/_recipe.router.js*\r\n\r\n// # Recipe API object\r\n\r\n// HTTP Verb  Route                   Description\r\n\r\n// GET        /api/recipe             Get all of the recipes\r\n// GET        /api/recipe/:recipe_id  Get a single recipe by recipe id\r\n// POST       /api/recipe             Create a single recipe\r\n// DELETE     /api/recipe/:recipe_id  Delete a single recipe\r\n// PUT        /api/recipe/:recipe_id  Update a recipe with new info\r\n\r\n// Load the `recipe` model\r\nimport Recipe from '../models/recipe.model';\r\n\r\nexport default (app, router) => {\r\n\r\n  // ## Recipe API Routes\r\n\r\n  // Define routes for the `recipe` API\r\n\r\n  router.route('/recipe')\r\n\r\n    // ### Create a `recipe`\r\n\r\n    // Accessed at POST http://localhost:8080/api/recipe\r\n\r\n    // Create a `recipe`\r\n    .post((req, res) => {\r\n\r\n      Recipe.create({\r\n\r\n        title : req.body.title,\r\n\r\n        tags : req.body.tags,\r\n\r\n        rating : req.body.rating,\r\n\r\n        description : req.body.description,\r\n\r\n        ingredients : req.body.ingredients,\r\n\r\n        directions : req.body.directions,\r\n\r\n      }, (err, recipe) => {\r\n\r\n        if (err)\r\n          res.send(err);\r\n\r\n        // DEBUG\r\n        console.log(`Recipe created: ${recipe}`);\r\n\r\n        // return the new `recipe` to our front-end\r\n        res.json(recipe);\r\n      });\r\n    })\r\n\r\n    // ### Get all of the `recipes`\r\n\r\n    // Accessed at GET http://localhost:8080/api/recipe\r\n    .get((req, res) => {\r\n\r\n      // Use mongoose to get all recipes in the database\r\n      Recipe.find((err, recipe) => {\r\n\r\n        if(err)\r\n          res.send(err);\r\n\r\n        else\r\n          res.json(recipe);\r\n      });\r\n    });\r\n\r\n  router.route('/recipe/:recipe_id')\r\n\r\n    // ### Get a `recipe` by ID\r\n\r\n    // Accessed at GET http://localhost:8080/api/recipe/:recipe_id\r\n    .get((req, res) => {\r\n\r\n      // Use mongoose to fetch a single `recipe` by id in the database\r\n      Recipe.findOne(req.params.recipe_id, (err, recipe) => {\r\n\r\n        if(err)\r\n          res.send(err);\r\n\r\n        else\r\n          res.json(recipe);\r\n      });\r\n    })\r\n\r\n    // ### Update a `recipe` by ID\r\n\r\n    // Accessed at PUT http://localhost:8080/api/recipe/:recipe_id\r\n    .put((req, res) => {\r\n\r\n      // use our `recipe` model to find the `recipe` we want\r\n      Recipe.findOne({\r\n\r\n        '_id' : req.params.recipe_id\r\n\r\n      }, (err, recipe) => {\r\n\r\n        if (err)\r\n          res.send(err);\r\n\r\n        // Only update a field if a new value has been passed in\r\n        if (req.body.title)\r\n          recipe.title = req.body.title;\r\n\r\n        if (req.body.tags)\r\n          recipe.tags = req.body.tags;\r\n\r\n        if (req.body.rating)\r\n          recipe.rating = req.body.rating;\r\n\r\n        if (req.body.creator)\r\n          recipe.creator = req.body.creator;\r\n\r\n        if (req.body.description)\r\n          recipe.description = req.body.description;\r\n\r\n        if (req.body.ingredients)\r\n          recipe.ingredients = req.body.ingredients;\r\n\r\n        if (req.body.directions)\r\n          recipe.directions = req.body.directions;\r\n\r\n        // save the `recipe`\r\n        return recipe.save((err) => {\r\n\r\n          if (err)\r\n            res.send(err);\r\n\r\n          return res.send(recipe);\r\n\r\n        });\r\n      });\r\n    })\r\n\r\n    // ### Delete a `recipe` by ID\r\n\r\n    // Accessed at DELETE http://localhost:8080/api/recipe/:recipe_id\r\n    .delete((req, res) => {\r\n\r\n      // DEBUG\r\n      console.log(`Attempting to delete recipe with id: ${req.params.recipe_id}`);\r\n\r\n      Recipe.remove({\r\n\r\n        _id : req.params.recipe_id\r\n      }, (err, recipe) => {\r\n\r\n        if(err)\r\n          res.send(err);\r\n\r\n        else\r\n          console.log('Recipe successfully deleted!');\r\n\r\n        Recipe.find((err, recipes) => {\r\n          if(err)\r\n            res.send(err);\r\n\r\n          res.json(recipes);\r\n        });\r\n      });\r\n    });\r\n};\r\n"]}