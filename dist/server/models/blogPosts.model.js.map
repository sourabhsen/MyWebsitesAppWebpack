{"version":3,"sources":["../../../app/models/blogPosts.model.js"],"names":["fs","require","app","Schema","mongoose","blogpostschema","title","String","description","type","required","link","created_at","Date","updated_at","date_label","img","data","Buffer","contentType","pageUrl","upvotes","Number","default","downvotes","comments","name","firstL","comment","plugin","mongoosePaginate","pre","next","currentDate","_id","replace","toDateString","Blog","model","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;;AAEA,IAAIC,MAAM,wBAAV;;AAEA,IAAKC,SAASC,mBAASD,MAAvB;;AAEA,IAAKE,iBAAiB,IAAIF,MAAJ,CAAW;AAC7BG,WAAMC,MADuB;AAE7BC,iBAAY,EAACC,MAAMF,MAAP,EAAeG,UAAS,IAAxB,EAFiB;AAG7BC,UAAKJ,MAHwB;AAI7BK,gBAAYC,IAJiB;AAK7BC,gBAAYD,IALiB;AAM7BE,gBAAWR,MANkB;AAO7BS,SAAK,EAAEC,MAAMC,MAAR,EAAgBC,aAAYZ,MAA5B,EAPwB;AAQ7Ba,aAAQb,MARqB;AAS7Bc,aAAQ,EAACZ,MAAMa,MAAP,EAAeC,SAAS,CAAxB,EATqB;AAU7BC,eAAU,EAACf,MAAMa,MAAP,EAAeC,SAAS,CAAxB,EAVmB;AAW7BE,cACI,CACI;AACIC,cAAKnB,MADT;AAEIoB,gBAAOpB,MAFX;AAGIqB,iBAAQrB;AAHZ,KADJ;AAZyB,CAAX,CAAtB;;AAsBAF,eAAewB,MAAf,CAAsBC,0BAAtB;;AAEA;AACAzB,eAAe0B,GAAf,CAAmB,MAAnB,EAA2B,UAASC,IAAT,EAAe;AACxC;AACA,QAAIC,cAAc,IAAIpB,IAAJ,EAAlB;;AAEA;AACA,SAAKC,UAAL,GAAkBmB,WAAlB;;AAGA;AACA,QAAG,KAAKC,GAAL,IAAY,KAAK5B,KAApB,EAA0B;AACtB,YAAIA,QAAQ,KAAKA,KAAL,CAAW6B,OAAX,CAAmB,KAAnB,EAAyB,GAAzB,CAAZ;AACA,aAAKf,OAAL,GAAe,WAAW,KAAKc,GAAhB,GAAqB,GAArB,GAA0B5B,KAAzC;AACH;;AAED;AACA,QAAI,CAAC,KAAKM,UAAV,EAAqB;AACnB,aAAKA,UAAL,GAAkBqB,WAAlB;AACA,aAAKlB,UAAL,GAAmB,KAAKH,UAAL,CAAgBwB,YAAhB,EAAnB;AACD,KAHD,MAGK;AACD,aAAKrB,UAAL,GAAmB,KAAKH,UAAL,CAAgBwB,YAAhB,EAAnB;AACH;;AAEDJ;AACD,CAvBD;;AA0BC,IAAIK,OAAQjC,mBAASkC,KAAT,CAAe,UAAf,EAA0BjC,cAA1B,CAAZ;;AAEA;;AAEDkC,OAAOC,OAAP,GAAkBH,IAAlB","file":"blogPosts.model.js","sourcesContent":["import mongoose from 'mongoose';\nimport express from 'express';\n\nimport mongoosePaginate from 'mongoose-paginate';\n\nlet fs = require('fs');\n\nlet app = express();\n\nlet  Schema = mongoose.Schema;\n\nlet  blogpostschema = new Schema({\n    title:String,\n    description:{type: String, required:true},\n    link:String,\n    created_at: Date,\n    updated_at: Date,\n    date_label:String,\n    img: { data: Buffer ,contentType:String },\n    pageUrl:String,\n    upvotes:{type: Number, default: 0},\n    downvotes:{type: Number, default: 0},\n    comments:\n        [\n            {\n                name:String,\n                firstL:String,\n                comment:String\n            }\n        ]\n});\n\n\nblogpostschema.plugin(mongoosePaginate);\n\n// on every save, add the date\nblogpostschema.pre('save', function(next) {\n  // get the current date\n  var currentDate = new Date();\n  \n  // change the updated_at field to current date\n  this.updated_at = currentDate;\n\n  \n  //pageUrllink\n  if(this._id && this.title){\n      let title = this.title.replace(/\\W/g,'-');\n      this.pageUrl = '/post/' + this._id +'/'+ title;\n  }\n\n  // if created_at doesn't exist, add to that field\n  if (!this.created_at){\n    this.created_at = currentDate;\n    this.date_label =  this.created_at.toDateString();\n  }else{\n      this.date_label =  this.created_at.toDateString();\n  }\n\n  next();\n});\n\n \n var Blog =  mongoose.model('blogpost',blogpostschema)\n\n //export default mongoose.model('BlogPost', BlogPostschema,'BlogPost');\n\nmodule.exports  = Blog;"]}