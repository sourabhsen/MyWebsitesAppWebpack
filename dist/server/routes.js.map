{"version":3,"sources":["../../app/routes.js"],"names":["app","router","passport","use","req","res","next","console","log","auth","isAuthenticated","send","admin","user","role","get","request_url","render","redirect"],"mappings":";;;;;;AAQA;;;;AAGA;;;;AAGA;;;;AAGA;;;;AAGA;;;;;;AAJA;;;AANA;kBAYe,UAACA,GAAD,EAAMC,MAAN,EAAcC,QAAd,EAA2B;;AAExC;AACAD,SAAOE,GAAP,CAAW,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;;AAE7BC,YAAQC,GAAR,CAAY,uCAAZ,EAF6B,CAEyB;;AAEtD;AACAF;AACD,GAND;;AAQA;AACA,MAAIG,OAAO,SAAPA,IAAO,CAACL,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;;AAE7B,QAAI,CAACF,IAAIM,eAAJ,EAAL,EACEL,IAAIM,IAAJ,CAAS,GAAT,EADF,KAIEL;AACH,GAPD;;AASA;AACA;AACA,MAAIM,QAAQ,SAARA,KAAQ,CAACR,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;;AAE9B,QAAI,CAACF,IAAIM,eAAJ,EAAD,IAA0BN,IAAIS,IAAJ,CAASC,IAAT,KAAkB,OAAhD,EACET,IAAIM,IAAJ,CAAS,GAAT,EADF,KAIEL;AACH,GAPD;;AASA;;AAEA;;AAEA;;AAEA;AACA;AACA,sCAAWN,GAAX,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCO,IAAlC,EAAwCG,KAAxC;;AAEA;;AAEA;AACA,4BAAWZ,GAAX,EAAgBC,MAAhB;;AAED,8BAAaD,GAAb,EAAkBC,MAAlB;;AAEC,gCAAeD,GAAf,EAAmBC,MAAnB;;AAEA,mCAAkBD,GAAlB,EAAuBC,MAAvB;;AAED;AACAD,MAAIG,GAAJ,CAAQ,MAAR,EAAgBF,MAAhB;;AAEC;;AAEA;AACAD,MAAIe,GAAJ,CAAQ,GAAR,EAAa,UAACX,GAAD,EAAMC,GAAN,EAAc;;AAEzB,QAAIW,cAAa,kKAAjB;AACA;AACA;AACCX,QAAIY,MAAJ,CAAW,YAAX;AACF;AAEA,GARD;;AAUC;AACDjB,MAAIe,GAAJ,CAAQ,IAAR,EAAc,UAACX,GAAD,EAAMC,GAAN,EAAc;;AAE1B;AACA;AACAA,QAAIa,QAAJ,CAAa,GAAb;AAED,GAND;;AAQD;;;;;;AAOA,C;;AAxFD;;;AANA;;AAZA;;AAEA;;AAEA;;AAEA","file":"routes.js","sourcesContent":["\r\n// */app/routes.js*\r\n\r\n// ## Node API Routes\r\n\r\n// Define routes for the Node backend\r\n\r\n// Load our API routes for user authentication\r\nimport authRoutes from './routes/_authentication.router.js';\r\n\r\n// Load our API routes for the `todo` component\r\nimport todoRoutes from './routes/_todo.router.js';\r\n\r\n// Load our API routes for the `recipe` component\r\nimport recipeRoutes from './routes/_recipe.router.js';\r\n\r\n//Load our API routes for the 'blog posts' component\r\nimport blogPostRoutes from './routes/_blogpost.router.js';  \r\n\r\n//Load our API routes for the 'blog posts' component\r\nimport projectWorkRoutes from './routes/_projectwork.router.js';  \r\n\r\nexport default (app, router, passport) => {\r\n\r\n  // ### Express Middlware to use for all requests\r\n  router.use((req, res, next) => {\r\n\r\n    console.log('I sense a disturbance in the force...'); // DEBUG\r\n\r\n    // Make sure we go to the next routes and don't stop here...\r\n    next();\r\n  });\r\n\r\n  // Define a middleware function to be used for all secured routes\r\n  let auth = (req, res, next) => {\r\n\r\n    if (!req.isAuthenticated())\r\n      res.send(401);\r\n\r\n    else\r\n      next();\r\n  };\r\n\r\n  // Define a middleware function to be used for all secured administration\r\n  // routes\r\n  let admin = (req, res, next) => {\r\n\r\n    if (!req.isAuthenticated() || req.user.role !== 'admin')\r\n      res.send(401);\r\n\r\n    else\r\n      next();\r\n  };\r\n\r\n  // ### Server Routes\r\n\r\n  // Handle things like API calls,\r\n\r\n  // #### Authentication routes\r\n\r\n  // Pass in our Express app and Router.\r\n  // Also pass in auth & admin middleware and Passport instance\r\n  authRoutes(app, router, passport, auth, admin);\r\n\r\n  // #### RESTful API Routes\r\n\r\n  // Pass in our Express app and Router\r\n  todoRoutes(app, router);\r\n\r\n\trecipeRoutes(app, router);\r\n\r\n  blogPostRoutes(app,router);\r\n\r\n  projectWorkRoutes(app, router);\r\n\r\n\t// All of our routes will be prefixed with /api\r\n\tapp.use('/api', router);\r\n\r\n  // ### Frontend Routes\r\n\r\n  // Route to handle all Angular requests\r\n  app.get('/', (req, res) => {\r\n    \r\n    let request_url ='https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=75nwsrs8dwshgk&redirect_uri=http://localhost:3030&state=996302&scope=r_basicprofile';\r\n    // Load our src/app.html file\r\n    //** Note that the root is set to the parent of this folder, ie the app root **\r\n     res.render('index.html');\r\n   // res.redirect(request_url);\r\n    \r\n  });\r\n\r\n   // Route to handle all Angular requests\r\n  app.get('/*', (req, res) => {\r\n     \r\n    // Load our src/app.html file\r\n    //** Note that the root is set to the parent of this folder, ie the app root **\r\n    res.redirect('/');\r\n    \r\n  });\r\n\r\n /*  app.get('/app.bundle.js', function (req, res) {\r\n\r\n    // Load our src/app.html file\r\n    //** Note that the root is set to the parent of this folder, ie the app root **\r\n    res.sendFile('/dist/app.bundle.js', { root: __dirname + \"/../\" });\r\n  }); */\r\n  \r\n};\r\n"]}