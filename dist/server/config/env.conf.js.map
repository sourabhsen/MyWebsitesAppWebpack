{"version":3,"sources":["../../../app/config/env.conf.js"],"names":["validateEnvVariables","config","ENV","PORT","MONGO_URI","DEVELOPMENT","PRODUCTION","TEST","SESSION_SECRET","process","env","NODE_ENV","validateNodeEnvironment","validateMongoUri","console","log"],"mappings":";;;;;QA2BgBA,oB,GAAAA,oB;AA3BhB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,IAAIC,SAAS;AACGC,OAAM,YADT;AAEGC,QAAO,IAFV;AAGGC,aAAY;AACVC,iBAAc,uCADJ;AAEVC,gBAAa,uDAFH;AAGVC,UAAO;AAHG,GAHf;AAQGC,kBAAiB;AARpB,CAAb;;AAWA;AACA;AACA;AACO,SAASR,oBAAT,GAAgC;;AAErC;AACA;;AAEA,MAAG,CAACS,QAAQC,GAAR,CAAYC,QAAhB,EAA0B;AACxBF,YAAQC,GAAR,CAAYC,QAAZ,GAAuBV,OAAOC,GAA9B;AACD;;AAED;AACAU;;AAEA;AACA,MAAI,CAACH,QAAQC,GAAR,CAAYF,cAAjB,EACEC,QAAQC,GAAR,CAAYF,cAAZ,GAA6BP,OAAOO,cAApC;;AAEF,MAAI,CAACC,QAAQC,GAAR,CAAYP,IAAjB,EACEM,QAAQC,GAAR,CAAYP,IAAZ,GAAmBF,OAAOE,IAA1B;;AAEF;AACAU;;AAEA;AACD;;AAED,SAASD,uBAAT,GAAmC;AACjC;AACA;AACA;;AAEA,UAAOH,QAAQC,GAAR,CAAYC,QAAnB;;AAEE,SAAK,aAAL;;AAEEG,cAAQC,GAAR,+BAAwCN,QAAQC,GAAR,CAAYC,QAApD;AACA;;AAEF,SAAK,YAAL;;AAEEG,cAAQC,GAAR,8BAAuCN,QAAQC,GAAR,CAAYC,QAAnD;AACA;;AAEF,SAAK,MAAL;;AAEEG,cAAQC,GAAR,+BAAwCN,QAAQC,GAAR,CAAYC,QAApD;AACA;;AAEF;;AAEEG,cAAQC,GAAR,CAAY,0DACR,8DADJ;AAEAD,cAAQC,GAAR,CAAY,qBAAqBN,QAAQC,GAAR,CAAYC,QAA7C;AACAG,cAAQC,GAAR,CAAY,mCAAZ;AACAN,cAAQC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACA;AAxBJ;;AA2BA;AACD;;AAED;AACA;AACA,SAASE,gBAAT,GAA4B;;AAE1B,MAAI,CAACJ,QAAQC,GAAR,CAAYN,SAAjB,EAA4B;;AAE1BU,YAAQC,GAAR,CAAY,+BAAZ;AACAD,YAAQC,GAAR,CAAY,gDAAZ;;AAEA,YAAON,QAAQC,GAAR,CAAYC,QAAnB;;AAEE,WAAK,aAAL;;AAEEF,gBAAQC,GAAR,CAAYN,SAAZ,GAAwBH,OAAOG,SAAP,CAAiBC,WAAzC;AACAS,gBAAQC,GAAR,wBAAiCN,QAAQC,GAAR,CAAYC,QAA7C;AACA;;AAEF,WAAK,YAAL;;AAEEF,gBAAQC,GAAR,CAAYN,SAAZ,GAAwBH,OAAOG,SAAP,CAAiBE,UAAzC;AACAQ,gBAAQC,GAAR,wBAAiCN,QAAQC,GAAR,CAAYC,QAA7C;AACA;;AAEF,WAAK,MAAL;;AAEEF,gBAAQC,GAAR,CAAYN,SAAZ,GAAwBH,OAAOG,SAAP,CAAiBG,IAAzC;AACAO,gBAAQC,GAAR,wBAAiCN,QAAQC,GAAR,CAAYC,QAA7C;AACA;;AAEF;;AAEEG,gBAAQC,GAAR,CAAY,sDACV,mBADF;AAEA;AAxBJ;AA0BD;;AAED;AACD","file":"env.conf.js","sourcesContent":["// ```\r\n\r\n// *env.conf.js*\r\n\r\n// This is the file where we will configure our Node environmental\r\n// variables for production\r\n\r\n// Reference : http://thewebivore.com/super-simple-environment-variables-node-js/#comment-286662\r\n\r\n// # Node Env Variables\r\n\r\n//import config from './config.js';\r\n\r\nvar config = {\r\n                ENV : \"production\",\r\n                PORT : 3030,\r\n                MONGO_URI : {\r\n                  DEVELOPMENT : \"mongodb://localhost:27017/sourabhblog\",\r\n                  PRODUCTION : \"mongodb://user:root@ds054289.mlab.com:54289/portfolio\",\r\n                  TEST : \"mongodb://localhost:27017/sourabhblog\"\r\n                },\r\n                SESSION_SECRET : \"8DC22F3A81E7A779ABECE4C23B917\"   \r\n            };\r\n\r\n// Check each necessary node `environment variable` to see if a\r\n// value has been set and if not, use the `config` object to\r\n// supply appropriate values\r\nexport function validateEnvVariables() {\r\n\r\n  // If no value has been assigned to our environment variables,\r\n  // set them up...\r\n\r\n  if(!process.env.NODE_ENV) {\r\n    process.env.NODE_ENV = config.ENV;\r\n  }\r\n\r\n  // Check to see if `process.env.NODE_ENV` is valid\r\n  validateNodeEnvironment();\r\n\r\n  // For Express/Passport\r\n  if (!process.env.SESSION_SECRET)\r\n    process.env.SESSION_SECRET = config.SESSION_SECRET;\r\n\r\n  if (!process.env.PORT)\r\n    process.env.PORT = config.PORT;\r\n\r\n  // Set the appropriate MongoDB URI\r\n  validateMongoUri();\r\n\r\n  return;\r\n}\r\n\r\nfunction validateNodeEnvironment() {\r\n  // Check to see that the `process.env.NODE_ENV has been\r\n  // set to an appropriate value of `development`, `production`\r\n  // or `test`. If not, alert the user and default to `development`\r\n\r\n  switch(process.env.NODE_ENV) {\r\n\r\n    case 'development':\r\n\r\n      console.log(`Node environment set for ${process.env.NODE_ENV}`);\r\n      break;\r\n\r\n    case 'production':\r\n\r\n      console.log(`Node production set for ${process.env.NODE_ENV}`);\r\n      break;\r\n\r\n    case 'test':\r\n\r\n      console.log(`Node environment set for ${process.env.NODE_ENV}`);\r\n      break;\r\n\r\n    default:\r\n\r\n      console.log('Error: process.env.NODE_ENV should be set to a valid '\r\n        + ' value such as \\'production\\', \\'development\\', or \\'test\\'.');\r\n      console.log('Value received: ' + process.env.NODE_ENV);\r\n      console.log('Defaulting value for: development');\r\n      process.env.NODE_ENV = 'development';\r\n      break;\r\n  }\r\n\r\n  return;\r\n}\r\n\r\n// Set the appropriate MongoDB URI with the `config` object\r\n// based on the value in `process.env.NODE_ENV\r\nfunction validateMongoUri() {\r\n\r\n  if (!process.env.MONGO_URI) {\r\n\r\n    console.log('No value set for MONGO_URI...');\r\n    console.log('Using the supplied value from config object...')\r\n\r\n    switch(process.env.NODE_ENV) {\r\n\r\n      case 'development':\r\n\r\n        process.env.MONGO_URI = config.MONGO_URI.DEVELOPMENT;\r\n        console.log(`MONGO_URI set for ${process.env.NODE_ENV}`);\r\n        break;\r\n\r\n      case 'production':\r\n\r\n        process.env.MONGO_URI = config.MONGO_URI.PRODUCTION;\r\n        console.log(`MONGO_URI set for ${process.env.NODE_ENV}`);\r\n        break;\r\n\r\n      case 'test':\r\n\r\n        process.env.MONGO_URI = config.MONGO_URI.TEST;\r\n        console.log(`MONGO_URI set for ${process.env.NODE_ENV}`);\r\n        break;\r\n\r\n      default:\r\n\r\n        console.log('Unexpected behavior! process.env.NODE_ENV set to ' +\r\n          'unexpected value!');\r\n        break;\r\n    }\r\n  }\r\n\r\n  return;\r\n}\r\n"]}