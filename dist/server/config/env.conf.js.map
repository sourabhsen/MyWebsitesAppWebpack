{"version":3,"sources":["../../../app/config/env.conf.js"],"names":["validateEnvVariables","config","ENV","PORT","MONGO_URI","DEVELOPMENT","PRODUCTION","TEST","SESSION_SECRET","process","env","NODE_ENV","validateNodeEnvironment","validateMongoUri","console","log"],"mappings":";;;;;QA2BgBA,oB,GAAAA,oB;AA3BhB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,IAAIC,SAAS;AACGC,OAAM,YADT;AAEGC,QAAO,IAFV;AAGGC,aAAY;AACVC,iBAAc,uCADJ;AAEVC,gBAAa,uDAFH;AAGVC,UAAO;AAHG,GAHf;AAQGC,kBAAiB;AARpB,CAAb;;AAWA;AACA;AACA;AACO,SAASR,oBAAT,GAAgC;;AAErC;AACA;;AAEA,MAAG,CAACS,QAAQC,GAAR,CAAYC,QAAhB,EAA0B;AACxBF,YAAQC,GAAR,CAAYC,QAAZ,GAAuBV,OAAOC,GAA9B;AACD;;AAED;AACAU;;AAEA;AACA,MAAI,CAACH,QAAQC,GAAR,CAAYF,cAAjB,EACEC,QAAQC,GAAR,CAAYF,cAAZ,GAA6BP,OAAOO,cAApC;;AAEF,MAAI,CAACC,QAAQC,GAAR,CAAYP,IAAjB,EACEM,QAAQC,GAAR,CAAYP,IAAZ,GAAmBF,OAAOE,IAA1B;;AAEF;AACAU;;AAEA;AACD;;AAED,SAASD,uBAAT,GAAmC;AACjC;AACA;AACA;;AAEA,UAAOH,QAAQC,GAAR,CAAYC,QAAnB;;AAEE,SAAK,aAAL;;AAEEG,cAAQC,GAAR,+BAAwCN,QAAQC,GAAR,CAAYC,QAApD;AACA;;AAEF,SAAK,YAAL;;AAEEG,cAAQC,GAAR,8BAAuCN,QAAQC,GAAR,CAAYC,QAAnD;AACA;;AAEF,SAAK,MAAL;;AAEEG,cAAQC,GAAR,+BAAwCN,QAAQC,GAAR,CAAYC,QAApD;AACA;;AAEF;;AAEEG,cAAQC,GAAR,CAAY,0DACR,8DADJ;AAEAD,cAAQC,GAAR,CAAY,qBAAqBN,QAAQC,GAAR,CAAYC,QAA7C;AACAG,cAAQC,GAAR,CAAY,mCAAZ;AACAN,cAAQC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACA;AAxBJ;;AA2BA;AACD;;AAED;AACA;AACA,SAASE,gBAAT,GAA4B;;AAE1B,MAAI,CAACJ,QAAQC,GAAR,CAAYN,SAAjB,EAA4B;;AAE1BU,YAAQC,GAAR,CAAY,+BAAZ;AACAD,YAAQC,GAAR,CAAY,gDAAZ;;AAEA,YAAON,QAAQC,GAAR,CAAYC,QAAnB;;AAEE,WAAK,aAAL;;AAEEF,gBAAQC,GAAR,CAAYN,SAAZ,GAAwBH,OAAOG,SAAP,CAAiBC,WAAzC;AACAS,gBAAQC,GAAR,wBAAiCN,QAAQC,GAAR,CAAYC,QAA7C;AACA;;AAEF,WAAK,YAAL;;AAEEF,gBAAQC,GAAR,CAAYN,SAAZ,GAAwBH,OAAOG,SAAP,CAAiBE,UAAzC;AACAQ,gBAAQC,GAAR,wBAAiCN,QAAQC,GAAR,CAAYC,QAA7C;AACA;;AAEF,WAAK,MAAL;;AAEEF,gBAAQC,GAAR,CAAYN,SAAZ,GAAwBH,OAAOG,SAAP,CAAiBG,IAAzC;AACAO,gBAAQC,GAAR,wBAAiCN,QAAQC,GAAR,CAAYC,QAA7C;AACA;;AAEF;;AAEEG,gBAAQC,GAAR,CAAY,sDACV,mBADF;AAEA;AAxBJ;AA0BD;;AAED;AACD","file":"env.conf.js","sourcesContent":["// ```\n\n// *env.conf.js*\n\n// This is the file where we will configure our Node environmental\n// variables for production\n\n// Reference : http://thewebivore.com/super-simple-environment-variables-node-js/#comment-286662\n\n// # Node Env Variables\n\n//import config from './config.js';\n\nvar config = {\n                ENV : \"production\",\n                PORT : 3030,\n                MONGO_URI : {\n                  DEVELOPMENT : \"mongodb://localhost:27017/sourabhblog\",\n                  PRODUCTION : \"mongodb://user:root@ds054289.mlab.com:54289/portfolio\",\n                  TEST : \"mongodb://localhost:27017/sourabhblog\"\n                },\n                SESSION_SECRET : \"8DC22F3A81E7A779ABECE4C23B917\"   \n            };\n\n// Check each necessary node `environment variable` to see if a\n// value has been set and if not, use the `config` object to\n// supply appropriate values\nexport function validateEnvVariables() {\n\n  // If no value has been assigned to our environment variables,\n  // set them up...\n\n  if(!process.env.NODE_ENV) {\n    process.env.NODE_ENV = config.ENV;\n  }\n\n  // Check to see if `process.env.NODE_ENV` is valid\n  validateNodeEnvironment();\n\n  // For Express/Passport\n  if (!process.env.SESSION_SECRET)\n    process.env.SESSION_SECRET = config.SESSION_SECRET;\n\n  if (!process.env.PORT)\n    process.env.PORT = config.PORT;\n\n  // Set the appropriate MongoDB URI\n  validateMongoUri();\n\n  return;\n}\n\nfunction validateNodeEnvironment() {\n  // Check to see that the `process.env.NODE_ENV has been\n  // set to an appropriate value of `development`, `production`\n  // or `test`. If not, alert the user and default to `development`\n\n  switch(process.env.NODE_ENV) {\n\n    case 'development':\n\n      console.log(`Node environment set for ${process.env.NODE_ENV}`);\n      break;\n\n    case 'production':\n\n      console.log(`Node production set for ${process.env.NODE_ENV}`);\n      break;\n\n    case 'test':\n\n      console.log(`Node environment set for ${process.env.NODE_ENV}`);\n      break;\n\n    default:\n\n      console.log('Error: process.env.NODE_ENV should be set to a valid '\n        + ' value such as \\'production\\', \\'development\\', or \\'test\\'.');\n      console.log('Value received: ' + process.env.NODE_ENV);\n      console.log('Defaulting value for: development');\n      process.env.NODE_ENV = 'development';\n      break;\n  }\n\n  return;\n}\n\n// Set the appropriate MongoDB URI with the `config` object\n// based on the value in `process.env.NODE_ENV\nfunction validateMongoUri() {\n\n  if (!process.env.MONGO_URI) {\n\n    console.log('No value set for MONGO_URI...');\n    console.log('Using the supplied value from config object...')\n\n    switch(process.env.NODE_ENV) {\n\n      case 'development':\n\n        process.env.MONGO_URI = config.MONGO_URI.DEVELOPMENT;\n        console.log(`MONGO_URI set for ${process.env.NODE_ENV}`);\n        break;\n\n      case 'production':\n\n        process.env.MONGO_URI = config.MONGO_URI.PRODUCTION;\n        console.log(`MONGO_URI set for ${process.env.NODE_ENV}`);\n        break;\n\n      case 'test':\n\n        process.env.MONGO_URI = config.MONGO_URI.TEST;\n        console.log(`MONGO_URI set for ${process.env.NODE_ENV}`);\n        break;\n\n      default:\n\n        console.log('Unexpected behavior! process.env.NODE_ENV set to ' +\n          'unexpected value!');\n        break;\n    }\n  }\n\n  return;\n}\n"]}